(function () {
  function generateArrayWithTwoDuplicates() {
    const uniqueNumbers = [];
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 15 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª
    while (uniqueNumbers.length < 15) {
      const number = Math.floor(Math.random() * 100); // –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 99
      if (!uniqueNumbers.includes(number)) {
        uniqueNumbers.push(number);
      }
    }
    // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç
    const duplicate =
      uniqueNumbers[Math.floor(Math.random() * uniqueNumbers.length)];

    // –î–æ–±–∞–≤–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç –≤ –º–∞—Å—Å–∏–≤
    const resultArray = [...uniqueNumbers, duplicate];

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —á–∏—Å–µ–ª
    for (let i = resultArray.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [resultArray[i], resultArray[j]] = [resultArray[j], resultArray[i]];
    }

    return resultArray;
  }

  const randomArray = generateArrayWithTwoDuplicates();
  //console.log("randomArray", randomArray);

  function showCelebration() {
    // –°–æ–∑–¥–∞–µ–º –∑–∞—Ç–µ–º–Ω–µ–Ω–Ω—ã–π –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ñ–æ–Ω
    const overlay = document.createElement("div");
    overlay.style.position = "fixed";
    overlay.style.top = 0;
    overlay.style.left = 0;
    overlay.style.width = "100%";
    overlay.style.height = "100%";
    overlay.style.backgroundColor = "rgba(0, 0, 0, 0.6)";
    overlay.style.display = "flex";
    overlay.style.justifyContent = "center";
    overlay.style.alignItems = "center";
    overlay.style.zIndex = 9999;
  
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ñ–∞–Ω—Ñ–∞—Ä –∏ –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
    const celebrationContainer = document.createElement("div");
    celebrationContainer.style.textAlign = "center";
  
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!"
    const message = document.createElement("h1");
    message.textContent = "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –Ω–∞—à–ª–∏ –ø–∞—Ä—É! üéâ";
    message.style.color = "white";
    message.style.fontSize = "4rem";
    message.style.textShadow = "2px 2px 10px rgba(0, 0, 0, 0.8)";
    celebrationContainer.appendChild(message);
  
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∫–æ–Ω—Ñ–µ—Ç—Ç–∏ (—Å–º–∞–π–ª–∏–∫–∏)
    const emojiArray = ["üéÜ", "üéá", "üéâ", "‚ú®", "üéä", "üåü", "ü•≥"];
    for (let i = 0; i < 50; i++) {
      const emoji = document.createElement("div");
      emoji.textContent = emojiArray[Math.floor(Math.random() * emojiArray.length)];
      emoji.style.position = "absolute";
      emoji.style.fontSize = "2rem";
      emoji.style.animation = "falling 2s linear infinite";
      emoji.style.left = Math.random() * 100 + "%";
      emoji.style.top = Math.random() * 100 + "%";
      emoji.style.animationDelay = Math.random() + "s";
      celebrationContainer.appendChild(emoji);
    }
  
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    const style = document.createElement("style");
    style.textContent = `
      @keyframes falling {
        0% {
          transform: translateY(-100vh) rotate(0deg);
        }
        100% {
          transform: translateY(100vh) rotate(360deg);
        }
      }
    `;
    document.head.appendChild(style);
  
    overlay.appendChild(celebrationContainer);
    document.body.appendChild(overlay);
  
    // –£–±–∏—Ä–∞–µ–º —Ñ–∞–Ω—Ñ–∞—Ä—ã —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      overlay.remove();
      style.remove();
    }, 5000);
  }

  const createItemCart = (backNumber) => {
    const elementCard = document.createElement("div");
    elementCard.classList.add(
      "flex",
      "group",
      "relative",
      "w-36",
      "h-36",
      "rounded-lg",
      "bg-red-800/40",
      "cursor-pointer",
      "justify-center",
      "hover:bg-red-800/60",
      "items-center",
      "shadow-md",
      "perspective"
    );
    // –ü–µ—Ä–µ–¥–Ω—è—è —Å—Ç–æ—Ä–æ–Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
    const front = document.createElement("div");
    front.classList.add(
      "absolute",
      "w-full",
      "h-full",
      "rounded-lg",
      "flex",
      "justify-center",
      "items-center",
      "backface-hidden",
      "transition-transform",
      "duration-700"
    );
    const back = document.createElement("div");
    back.classList.add(
      "back",
      "absolute",
      "w-full",
      "h-full",
      "rounded-lg",
      "flex",
      "bg-red-800/50",
      "justify-center",
      "items-center",
      "text-white",
      "text-3xl",
      "font-bold",
      "rotate-x-180",
      "backface-hidden",
      "transition-transform",
      "duration-700"
    );
    back.textContent = backNumber;

    const img = document.createElement("img");
    img.src = "img/star.svg";
    img.alt = "star";
    img.style.opacity = "0.4"; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 40% –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏
    img.classList.add("p-3");
    elementCard.append(front, back);
    front.appendChild(img);

    return elementCard;
  };

  const createButtonRestart = () => {
    const gamerestart = document.createElement("div");
    gamerestart.classList.add("gamerestart");
    gamerestart.id = "gamerestartbutton";
    const button = document.createElement("button");
    button.classList.add(
      "flex",
      "justify-center",
      "items-center",
      "text-white",
      "text-2xl",
      "font-normal",
      "bg-indigo-800/70",
      "rounded-2xl",
      "px-6",
      "py-3",
      "shadow-md",
      "hover:bg-indigo-700/70",
      "hover:scale-y-105"
    );
    button.textContent = "–°—ã–≥—Ä–∞—Ç—å –µ—â–µ";
    gamerestart.append(button);
    button.onclick = () => {
      history.go(0);
    };

    return gamerestart;
  };

  const createCardsApp = (cardsclass, gamebutton) => {
    let openCards = [];
    let lockBoard = false;

    for (let i = 0; i < 16; i++) {
      const itemCard = createItemCart(randomArray[i]);

      itemCard.addEventListener("click", () => {
        if (lockBoard || itemCard.classList.contains("flipped")) return;

        itemCard.classList.add("flipped");
        openCards.push(itemCard);
        //console.log("openCards", openCards);

        if (openCards.length === 2) {
          const [firstCard, secondCard] = openCards;
          const firstNumber = firstCard.querySelector(".back").textContent;
          const secondNumber = secondCard.querySelector(".back").textContent;

          if (firstNumber !== secondNumber) {
            lockBoard = true; // –ë–ª–æ–∫–∏—Ä—É–µ–º –¥–æ—Å–∫—É
            //console.log("lockBoard", lockBoard);
            setTimeout(() => {
              firstCard.classList.remove("flipped");
              secondCard.classList.remove("flipped");
              openCards = [];
              lockBoard = false; // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –¥–æ—Å–∫—É
            }, 3000);
          } else {
            gamebutton.append(buttonRestart);
            showCelebration();
            console.log("–≤—ã –Ω–∞—à–ª–∏ –ø–∞—Ä—É!");
            return;
          }
        }
      });

      cardsclass.append(itemCard);
    }

    const buttonRestart = createButtonRestart();
  };

  window.createCardsApp = createCardsApp;
})();
